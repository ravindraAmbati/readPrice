<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="in.bigbasket.readPrice.ReadPriceApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-03-07T13:50:23" hostname="LAPTOP-D1GI58VA" time="0.187">
  <properties/>
  <testcase name="contextLoads()" classname="in.bigbasket.readPrice.ReadPriceApplicationTests" time="0.187"/>
  <system-out><![CDATA[19:20:17.319 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
19:20:17.340 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
19:20:17.385 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [in.bigbasket.readPrice.ReadPriceApplicationTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
19:20:17.423 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [in.bigbasket.readPrice.ReadPriceApplicationTests], using SpringBootContextLoader
19:20:17.430 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [in.bigbasket.readPrice.ReadPriceApplicationTests]: class path resource [in/bigbasket/readPrice/ReadPriceApplicationTests-context.xml] does not exist
19:20:17.432 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [in.bigbasket.readPrice.ReadPriceApplicationTests]: class path resource [in/bigbasket/readPrice/ReadPriceApplicationTestsContext.groovy] does not exist
19:20:17.432 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [in.bigbasket.readPrice.ReadPriceApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
19:20:17.433 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [in.bigbasket.readPrice.ReadPriceApplicationTests]: ReadPriceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
19:20:17.505 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [in.bigbasket.readPrice.ReadPriceApplicationTests]
19:20:17.641 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [R:\workspace\readPrice\build\classes\java\main\in\bigbasket\readPrice\ReadPriceApplication.class]
19:20:17.644 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration in.bigbasket.readPrice.ReadPriceApplication for test class in.bigbasket.readPrice.ReadPriceApplicationTests
19:20:17.803 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [in.bigbasket.readPrice.ReadPriceApplicationTests]: using defaults.
19:20:17.805 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
19:20:17.819 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
19:20:17.844 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@569e5381, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@71500c9c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@70ed850b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@505e1da2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74785e73, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5bd988c, org.springframework.test.context.event.EventPublishingTestExecutionListener@196480ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@39f73d6e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f4a77e5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@66daf778, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5b8460a6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5b182af5]
19:20:17.853 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@295da4b5 testClass = ReadPriceApplicationTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@365a9791 testClass = ReadPriceApplicationTests, locations = '{}', classes = '{class in.bigbasket.readPrice.ReadPriceApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@aa68514, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3996ae00, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@151b57ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@42a3b211], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
19:20:17.872 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@295da4b5 testClass = ReadPriceApplicationTests, testInstance = in.bigbasket.readPrice.ReadPriceApplicationTests@7b682a8e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@365a9791 testClass = ReadPriceApplicationTests, locations = '{}', classes = '{class in.bigbasket.readPrice.ReadPriceApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@aa68514, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3996ae00, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@151b57ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@42a3b211], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
19:20:17.907 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.5.RELEASE)

2020-03-07 19:20:18.340  INFO 17776 --- [    Test worker] i.b.readPrice.ReadPriceApplicationTests  : Starting ReadPriceApplicationTests on LAPTOP-D1GI58VA with PID 17776 (started by ravin in R:\workspace\readPrice)
2020-03-07 19:20:18.342  INFO 17776 --- [    Test worker] i.b.readPrice.ReadPriceApplicationTests  : No active profile set, falling back to default profiles: default
2020-03-07 19:20:18.944  INFO 17776 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-03-07 19:20:19.057  INFO 17776 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99ms. Found 1 JPA repository interfaces.
2020-03-07 19:20:19.937  INFO 17776 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-03-07 19:20:20.091  INFO 17776 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.12.Final
2020-03-07 19:20:20.433  INFO 17776 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-03-07 19:20:20.661  INFO 17776 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-07 19:20:20.931  INFO 17776 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-07 19:20:20.964  INFO 17776 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
Hibernate: drop table if exists product cascade
Hibernate: create table product (id  bigserial not null, name varchar(255), price float8, prod_id varchar(255), quantity varchar(255), timestamp timestamp, primary key (id))
2020-03-07 19:20:22.192  INFO 17776 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-03-07 19:20:22.214  INFO 17776 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-07 19:20:23.066  INFO 17776 --- [    Test worker] i.b.readPrice.ReadPriceApplicationTests  : Started ReadPriceApplicationTests in 5.156 seconds (JVM running for 7.487)
Hibernate: insert into product (name, price, prod_id, quantity, timestamp) values (?, ?, ?, ?, ?)
Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}
Hibernate: insert into product (name, price, prod_id, quantity, timestamp) values (?, ?, ?, ?, ?)
Product{id='2', prodId='101', name='test1', quantity='1 Kg', price=70.0, timestamp=2020-03-07 19:20:23.146}
Hibernate: insert into product (name, price, prod_id, quantity, timestamp) values (?, ?, ?, ?, ?)
Product{id='3', prodId='103', name='test3', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.15}
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_
[Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}, Product{id='2', prodId='101', name='test1', quantity='1 Kg', price=70.0, timestamp=2020-03-07 19:20:23.146}, Product{id='3', prodId='103', name='test3', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.15}]
Hibernate: select count(*) as col_0_0_ from product product0_
3
Hibernate: select count(*) as col_0_0_ from product product0_ where product0_.id=?
true
Hibernate: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_, product0_.prod_id as prod_id4_0_0_, product0_.quantity as quantity5_0_0_, product0_.timestamp as timestam6_0_0_ from product product0_ where product0_.id=?
Optional[Product{id='2', prodId='101', name='test1', quantity='1 Kg', price=70.0, timestamp=2020-03-07 19:20:23.146}]
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_ where product0_.id in (? , ? , ?)
[Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}, Product{id='2', prodId='101', name='test1', quantity='1 Kg', price=70.0, timestamp=2020-03-07 19:20:23.146}]
Hibernate: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_, product0_.prod_id as prod_id4_0_0_, product0_.quantity as quantity5_0_0_, product0_.timestamp as timestam6_0_0_ from product product0_ where product0_.id=?
Hibernate: delete from product where id=?
Hibernate: select count(*) as col_0_0_ from product product0_
2
Hibernate: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_, product0_.prod_id as prod_id4_0_0_, product0_.quantity as quantity5_0_0_, product0_.timestamp as timestam6_0_0_ from product product0_ where product0_.id=?
Hibernate: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_, product0_.prod_id as prod_id4_0_0_, product0_.quantity as quantity5_0_0_, product0_.timestamp as timestam6_0_0_ from product product0_ where product0_.id=?
Hibernate: update product set name=?, price=?, prod_id=?, quantity=?, timestamp=? where id=?
Product{id='2', prodId='104', name='test1', quantity='250 gms', price=70.0, timestamp=2020-03-07 19:20:23.146}
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_ where product0_.price=?
[Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}]
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_ where product0_.price=? and product0_.quantity=?
[Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}]
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_ where product0_.prod_id=?
[Product{id='2', prodId='104', name='test1', quantity='250 gms', price=70.0, timestamp=2020-03-07 19:20:23.146}]
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_, product0_.prod_id as prod_id4_0_, product0_.quantity as quantity5_0_, product0_.timestamp as timestam6_0_ from product product0_ where product0_.prod_id in (? , ? , ? , ?)
[Product{id='1', prodId='101', name='test', quantity='100 gms', price=100.0, timestamp=2020-03-07 19:20:23.108}, Product{id='2', prodId='104', name='test1', quantity='250 gms', price=70.0, timestamp=2020-03-07 19:20:23.146}]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
